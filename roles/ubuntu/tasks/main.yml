---
- name: fetch repository keys from keyservers
  apt_key:
    id: "{{ item.id }}"
    state: "{{ item.state | default('present') }}"
    keyserver: "{{ item.keyserver | default(keyserver) }}"
  with_items: "{{ repository_keys }}"
  when: item.url is not defined
  become: true
  become_user: root
  tags:
    - install
    - config

- name: fetch repository keys from URLs
  apt_key:
    id: "{{ item.id | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    url: "{{ item.url }}"
  with_items: "{{ repository_keys }}"
  when: item.url is defined
  become: true
  become_user: root
  tags:
    - install
    - config

- name: configure apt proxy
  template: >-
    dest="/etc/apt/apt.conf.d/50proxy"
    src="apt-proxy.j2"
  when: apt_proxy is defined
  become: true
  become_user: root
  tags:
    - config
    - install

- name: configure repositories
  apt_repository:
    repo: "{{ item.repo }}"
    state: "{{ item.state | default('present') }}"
    update_cache: no
  with_items: "{{ repositories }}"
  become: true
  become_user: root
  tags:
    - install
    - config
    - upgrade

- name: set dpkg architectures
  shell: dpkg --add-architecture {{ item }}
  with_items: "{{ package_architectures }}"
  become: true
  become_user: root
  tags:
    - install
    - config
    - upgrade

- name: update package cache
  apt:
    update_cache: yes
  become: true
  become_user: root
  tags:
    - install
    - upgrade

- name: install packages
  apt:
    name: "{{ item.name }}"
    state: "{{ item.state | default(package_state) }}"
    install_recommends: false
  with_items: "{{ packages }}"
  become: true
  become_user: root
  tags:
    - install

- name: upgrade packages
  apt:
    upgrade: "{{ package_upgrade }}"
  become: true
  become_user: root
  tags:
    - install
    - upgrade
